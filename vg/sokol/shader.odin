package nanovg_sokol
import sg "../../../sokol-odin/sokol/gfx"
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input=vg/sokol/shader.glsl --output=vg/sokol/shader.odin --slang=glsl430:hlsl5:glsl300es --format=sokol_odin

    Overview:
    =========
    Shader program: 'ui':
        Get shader desc: ui_shader_desc(sg.query_backend())
        Vertex shader: vs
            Attributes:
                ATTR_vs_vertex => 0
                ATTR_vs_tcoord => 1
            Uniform block 'view':
                Odin struct: View
                Bind slot: SLOT_view => 0
        Fragment shader: fs
            Uniform block 'frag':
                Odin struct: Frag
                Bind slot: SLOT_frag => 0
            Image 'tex':
                Image type: ._2D
                Sample type: .FLOAT
                Multisampled: false
                Bind slot: SLOT_tex => 0
            Sampler 'smp':
                Type: .FILTERING
                Bind slot: SLOT_smp => 0
            Image Sampler Pair 'tex_smp':
                Image: tex
                Sampler: smp
*/
ATTR_vs_vertex :: 0
ATTR_vs_tcoord :: 1
SLOT_view :: 0
SLOT_frag :: 0
SLOT_tex :: 0
SLOT_smp :: 0
View :: struct #align(16) {
    using _: struct #packed {
        viewSize: [2]f32,
        _: [8]u8,
    },
}
Frag :: struct #align(16) {
    using _: struct #packed {
        scissorMat: [16]f32,
        paintMat: [16]f32,
        innerCol: [4]f32,
        outerCol: [4]f32,
        scissorExt: [2]f32,
        scissorScale: [2]f32,
        extent: [2]f32,
        radius: f32,
        feather: f32,
        strokeMult: f32,
        strokeThr: f32,
        texType: i32,
        type: i32,
    },
}
/*
    #version 430

    uniform vec4 view[1];
    layout(location = 0) out vec2 ftcoord;
    layout(location = 1) in vec2 tcoord;
    layout(location = 1) out vec2 fpos;
    layout(location = 0) in vec2 vertex;

    void main()
    {
        ftcoord = tcoord;
        fpos = vertex;
        gl_Position = vec4(((2.0 * vertex.x) / view[0].x) - 1.0, 1.0 - ((2.0 * vertex.y) / view[0].y), 0.0, 1.0);
    }

*/
@(private)
vs_source_glsl430 := [355]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x69,0x65,0x77,0x5b,
    0x31,0x5d,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,
    0x32,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,
    0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,
    0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x31,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x70,
    0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,
    0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,
    0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x74,0x63,0x6f,
    0x6f,0x72,0x64,0x20,0x3d,0x20,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x70,0x6f,0x73,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x28,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,
    0x76,0x65,0x72,0x74,0x65,0x78,0x2e,0x78,0x29,0x20,0x2f,0x20,0x76,0x69,0x65,0x77,
    0x5b,0x30,0x5d,0x2e,0x78,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,
    0x30,0x20,0x2d,0x20,0x28,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x76,0x65,0x72,0x74,
    0x65,0x78,0x2e,0x79,0x29,0x20,0x2f,0x20,0x76,0x69,0x65,0x77,0x5b,0x30,0x5d,0x2e,
    0x79,0x29,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x00,
}
/*
    #version 430

    struct frag
    {
        mat4 scissorMat;
        mat4 paintMat;
        vec4 innerCol;
        vec4 outerCol;
        vec2 scissorExt;
        vec2 scissorScale;
        vec2 extent;
        float radius;
        float feather;
        float strokeMult;
        float strokeThr;
        int texType;
        int type;
    };

    uniform frag _59;

    layout(binding = 0) uniform sampler2D tex_smp;

    layout(location = 0) in vec2 ftcoord;
    layout(location = 1) in vec2 fpos;
    layout(location = 0) out vec4 outColor;

    float scissorMask(vec2 p)
    {
        vec2 _84 = fma(-(abs((_59.scissorMat * vec4(p, 1.0, 0.0)).xy) - _59.scissorExt), _59.scissorScale, vec2(0.5));
        return clamp(_84.x, 0.0, 1.0) * clamp(_84.y, 0.0, 1.0);
    }

    float strokeMask()
    {
        return min(1.0, (1.0 - abs(fma(ftcoord.x, 2.0, -1.0))) * _59.strokeMult) * min(1.0, ftcoord.y);
    }

    float sdroundrect(vec2 pt, vec2 ext, float rad)
    {
        vec2 _33 = abs(pt) - (ext - vec2(rad, rad));
        return (min(max(_33.x, _33.y), 0.0) + length(max(_33, vec2(0.0)))) - rad;
    }

    void main()
    {
        vec2 param = fpos;
        float _120 = scissorMask(param);
        float _122 = strokeMask();
        if (_122 < _59.strokeThr)
        {
            discard;
        }
        vec4 result;
        if (_59.type == 0)
        {
            vec2 param_1 = (_59.paintMat * vec4(fpos, 1.0, 0.0)).xy;
            vec2 param_2 = _59.extent;
            float param_3 = _59.radius;
            result = mix(_59.innerCol, _59.outerCol, vec4(clamp(fma(_59.feather, 0.5, sdroundrect(param_1, param_2, param_3)) / _59.feather, 0.0, 1.0))) * (_122 * _120);
        }
        else
        {
            if (_59.type == 1)
            {
                vec4 color = texture(tex_smp, (_59.paintMat * vec4(fpos, 1.0, 0.0)).xy / _59.extent);
                if (_59.texType == 1)
                {
                    color = vec4(color.xyz * color.w, color.w);
                }
                if (_59.texType == 2)
                {
                    color = vec4(color.x);
                }
                vec4 _249 = color;
                vec4 _255 = (_249 * _59.innerCol) * (_122 * _120);
                color = _255;
                result = _255;
            }
            else
            {
                if (_59.type == 2)
                {
                    result = vec4(1.0);
                }
                else
                {
                    if (_59.type == 3)
                    {
                        vec4 color_1 = texture(tex_smp, ftcoord);
                        if (_59.texType == 1)
                        {
                            color_1 = vec4(color_1.xyz * color_1.w, color_1.w);
                        }
                        if (_59.texType == 2)
                        {
                            color_1 = vec4(color_1.x);
                        }
                        vec4 _301 = color_1;
                        vec4 _302 = _301 * _120;
                        color_1 = _302;
                        result = _302 * _59.innerCol;
                    }
                }
            }
        }
        outColor = result;
    }

*/
@(private)
fs_source_glsl430 := [2831]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x66,0x72,0x61,0x67,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x6d,0x61,0x74,0x34,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,0x61,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x61,0x69,0x6e,0x74,0x4d,
    0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x69,0x6e,0x6e,
    0x65,0x72,0x43,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,
    0x6f,0x75,0x74,0x65,0x72,0x43,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x32,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x45,0x78,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x53,
    0x63,0x61,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x65,
    0x78,0x74,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x66,0x65,0x61,0x74,0x68,0x65,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x75,0x6c,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x74,0x72,0x6f,
    0x6b,0x65,0x54,0x68,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x74,
    0x65,0x78,0x54,0x79,0x70,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x74,0x79,0x70,0x65,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,
    0x6d,0x20,0x66,0x72,0x61,0x67,0x20,0x5f,0x35,0x39,0x3b,0x0a,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x32,0x44,0x20,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,
    0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,
    0x66,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,0x20,0x76,
    0x65,0x63,0x34,0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,0x61,0x73,0x6b,
    0x28,0x76,0x65,0x63,0x32,0x20,0x70,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x2d,0x28,
    0x61,0x62,0x73,0x28,0x28,0x5f,0x35,0x39,0x2e,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,
    0x4d,0x61,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x2c,0x20,0x31,0x2e,
    0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x29,0x20,0x2d,0x20,0x5f,
    0x35,0x39,0x2e,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x45,0x78,0x74,0x29,0x2c,0x20,
    0x5f,0x35,0x39,0x2e,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x53,0x63,0x61,0x6c,0x65,
    0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x35,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,
    0x38,0x34,0x2e,0x78,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x20,
    0x2a,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x38,0x34,0x2e,0x79,0x2c,0x20,0x30,
    0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x61,0x73,0x6b,0x28,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x69,0x6e,
    0x28,0x31,0x2e,0x30,0x2c,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x61,0x62,0x73,
    0x28,0x66,0x6d,0x61,0x28,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,0x20,
    0x32,0x2e,0x30,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x5f,
    0x35,0x39,0x2e,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x75,0x6c,0x74,0x29,0x20,0x2a,
    0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,
    0x64,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,
    0x64,0x72,0x6f,0x75,0x6e,0x64,0x72,0x65,0x63,0x74,0x28,0x76,0x65,0x63,0x32,0x20,
    0x70,0x74,0x2c,0x20,0x76,0x65,0x63,0x32,0x20,0x65,0x78,0x74,0x2c,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x72,0x61,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x5f,0x33,0x33,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,0x70,0x74,
    0x29,0x20,0x2d,0x20,0x28,0x65,0x78,0x74,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,0x28,
    0x72,0x61,0x64,0x2c,0x20,0x72,0x61,0x64,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x6d,0x69,0x6e,0x28,0x6d,0x61,0x78,0x28,
    0x5f,0x33,0x33,0x2e,0x78,0x2c,0x20,0x5f,0x33,0x33,0x2e,0x79,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x20,0x2b,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x6d,0x61,0x78,
    0x28,0x5f,0x33,0x33,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,0x29,
    0x29,0x29,0x20,0x2d,0x20,0x72,0x61,0x64,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,
    0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x70,0x6f,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x30,
    0x20,0x3d,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,0x61,0x73,0x6b,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x61,
    0x73,0x6b,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x31,
    0x32,0x32,0x20,0x3c,0x20,0x5f,0x35,0x39,0x2e,0x73,0x74,0x72,0x6f,0x6b,0x65,0x54,
    0x68,0x72,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x79,
    0x70,0x65,0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x20,0x3d,0x20,0x28,0x5f,0x35,0x39,0x2e,0x70,0x61,0x69,0x6e,0x74,
    0x4d,0x61,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x70,0x6f,0x73,0x2c,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,
    0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x35,0x39,0x2e,0x65,0x78,0x74,0x65,0x6e,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x35,0x39,0x2e,0x72,
    0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,
    0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x35,0x39,0x2e,
    0x69,0x6e,0x6e,0x65,0x72,0x43,0x6f,0x6c,0x2c,0x20,0x5f,0x35,0x39,0x2e,0x6f,0x75,
    0x74,0x65,0x72,0x43,0x6f,0x6c,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6c,0x61,
    0x6d,0x70,0x28,0x66,0x6d,0x61,0x28,0x5f,0x35,0x39,0x2e,0x66,0x65,0x61,0x74,0x68,
    0x65,0x72,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x73,0x64,0x72,0x6f,0x75,0x6e,0x64,
    0x72,0x65,0x63,0x74,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x32,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,
    0x20,0x2f,0x20,0x5f,0x35,0x39,0x2e,0x66,0x65,0x61,0x74,0x68,0x65,0x72,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x5f,
    0x31,0x32,0x32,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,
    0x39,0x2e,0x74,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x2c,
    0x20,0x28,0x5f,0x35,0x39,0x2e,0x70,0x61,0x69,0x6e,0x74,0x4d,0x61,0x74,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x70,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x20,0x2f,0x20,0x5f,0x35,0x39,0x2e,
    0x65,0x78,0x74,0x65,0x6e,0x74,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,
    0x54,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x20,0x3d,
    0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x39,0x20,0x3d,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x35,0x35,0x20,0x3d,0x20,0x28,
    0x5f,0x32,0x34,0x39,0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x69,0x6e,0x6e,0x65,0x72,
    0x43,0x6f,0x6c,0x29,0x20,0x2a,0x20,0x28,0x5f,0x31,0x32,0x32,0x20,0x2a,0x20,0x5f,
    0x31,0x32,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x35,0x35,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,
    0x6c,0x74,0x20,0x3d,0x20,0x5f,0x32,0x35,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,
    0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,
    0x74,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,
    0x39,0x2e,0x74,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x33,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,
    0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x5f,0x73,0x6d,
    0x70,0x2c,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,0x54,0x79,0x70,0x65,
    0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,0x20,0x76,
    0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x77,0x2c,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,0x54,0x79,
    0x70,0x65,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,
    0x20,0x5f,0x33,0x30,0x31,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x32,0x20,0x3d,
    0x20,0x5f,0x33,0x30,0x31,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x30,0x32,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x5f,
    0x33,0x30,0x32,0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x69,0x6e,0x6e,0x65,0x72,0x43,
    0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    #version 300 es

    uniform vec4 view[1];
    out vec2 ftcoord;
    layout(location = 1) in vec2 tcoord;
    out vec2 fpos;
    layout(location = 0) in vec2 vertex;

    void main()
    {
        ftcoord = tcoord;
        fpos = vertex;
        gl_Position = vec4(((2.0 * vertex.x) / view[0].x) - 1.0, 1.0 - ((2.0 * vertex.y) / view[0].y), 0.0, 1.0);
    }

*/
@(private)
vs_source_glsl300es := [316]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x69,
    0x65,0x77,0x5b,0x31,0x5d,0x3b,0x0a,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x32,0x20,
    0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,
    0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x69,0x6e,
    0x20,0x76,0x65,0x63,0x32,0x20,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x76,0x65,0x72,0x74,0x65,0x78,
    0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x74,
    0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x70,0x6f,0x73,0x20,
    0x3d,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,
    0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x28,0x28,0x32,0x2e,0x30,0x20,0x2a,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x2e,
    0x78,0x29,0x20,0x2f,0x20,0x76,0x69,0x65,0x77,0x5b,0x30,0x5d,0x2e,0x78,0x29,0x20,
    0x2d,0x20,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x28,0x28,0x32,
    0x2e,0x30,0x20,0x2a,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x2e,0x79,0x29,0x20,0x2f,
    0x20,0x76,0x69,0x65,0x77,0x5b,0x30,0x5d,0x2e,0x79,0x29,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    #version 300 es
    precision mediump float;
    precision highp int;

    struct frag
    {
        highp mat4 scissorMat;
        highp mat4 paintMat;
        highp vec4 innerCol;
        highp vec4 outerCol;
        highp vec2 scissorExt;
        highp vec2 scissorScale;
        highp vec2 extent;
        highp float radius;
        highp float feather;
        highp float strokeMult;
        highp float strokeThr;
        int texType;
        int type;
    };

    uniform frag _59;

    uniform highp sampler2D tex_smp;

    in highp vec2 ftcoord;
    in highp vec2 fpos;
    layout(location = 0) out highp vec4 outColor;

    highp float scissorMask(highp vec2 p)
    {
        highp vec2 _84 = (-(abs((_59.scissorMat * vec4(p, 1.0, 0.0)).xy) - _59.scissorExt)) * _59.scissorScale + vec2(0.5);
        return clamp(_84.x, 0.0, 1.0) * clamp(_84.y, 0.0, 1.0);
    }

    highp float strokeMask()
    {
        return min(1.0, (1.0 - abs(ftcoord.x * 2.0 + (-1.0))) * _59.strokeMult) * min(1.0, ftcoord.y);
    }

    highp float sdroundrect(highp vec2 pt, highp vec2 ext, highp float rad)
    {
        highp vec2 _33 = abs(pt) - (ext - vec2(rad, rad));
        return (min(max(_33.x, _33.y), 0.0) + length(max(_33, vec2(0.0)))) - rad;
    }

    void main()
    {
        highp vec2 param = fpos;
        highp float _120 = scissorMask(param);
        highp float _122 = strokeMask();
        if (_122 < _59.strokeThr)
        {
            discard;
        }
        highp vec4 result;
        if (_59.type == 0)
        {
            highp vec2 param_1 = (_59.paintMat * vec4(fpos, 1.0, 0.0)).xy;
            highp vec2 param_2 = _59.extent;
            highp float param_3 = _59.radius;
            result = mix(_59.innerCol, _59.outerCol, vec4(clamp((_59.feather * 0.5 + sdroundrect(param_1, param_2, param_3)) / _59.feather, 0.0, 1.0))) * (_122 * _120);
        }
        else
        {
            if (_59.type == 1)
            {
                highp vec4 color = texture(tex_smp, (_59.paintMat * vec4(fpos, 1.0, 0.0)).xy / _59.extent);
                if (_59.texType == 1)
                {
                    color = vec4(color.xyz * color.w, color.w);
                }
                if (_59.texType == 2)
                {
                    color = vec4(color.x);
                }
                highp vec4 _249 = color;
                highp vec4 _255 = (_249 * _59.innerCol) * (_122 * _120);
                color = _255;
                result = _255;
            }
            else
            {
                if (_59.type == 2)
                {
                    result = vec4(1.0);
                }
                else
                {
                    if (_59.type == 3)
                    {
                        highp vec4 color_1 = texture(tex_smp, ftcoord);
                        if (_59.texType == 1)
                        {
                            color_1 = vec4(color_1.xyz * color_1.w, color_1.w);
                        }
                        if (_59.texType == 2)
                        {
                            color_1 = vec4(color_1.x);
                        }
                        highp vec4 _301 = color_1;
                        highp vec4 _302 = _301 * _120;
                        color_1 = _302;
                        result = _302 * _59.innerCol;
                    }
                }
            }
        }
        outColor = result;
    }

*/
@(private)
fs_source_glsl300es := [3037]u8 {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x33,0x30,0x30,0x20,0x65,0x73,0x0a,
    0x70,0x72,0x65,0x63,0x69,0x73,0x69,0x6f,0x6e,0x20,0x6d,0x65,0x64,0x69,0x75,0x6d,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x3b,0x0a,0x70,0x72,0x65,0x63,0x69,0x73,0x69,
    0x6f,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x69,0x6e,0x74,0x3b,0x0a,0x0a,0x73,
    0x74,0x72,0x75,0x63,0x74,0x20,0x66,0x72,0x61,0x67,0x0a,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x73,0x63,0x69,0x73,
    0x73,0x6f,0x72,0x4d,0x61,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x6d,0x61,0x74,0x34,0x20,0x70,0x61,0x69,0x6e,0x74,0x4d,0x61,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,
    0x69,0x6e,0x6e,0x65,0x72,0x43,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x6f,0x75,0x74,0x65,0x72,0x43,0x6f,
    0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x45,0x78,0x74,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x73,0x63,0x69,
    0x73,0x73,0x6f,0x72,0x53,0x63,0x61,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x65,0x78,0x74,0x65,0x6e,0x74,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x72,0x61,0x64,0x69,0x75,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x65,0x61,0x74,0x68,0x65,
    0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x75,0x6c,0x74,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,
    0x74,0x72,0x6f,0x6b,0x65,0x54,0x68,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,
    0x74,0x20,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x6e,0x74,0x20,0x74,0x79,0x70,0x65,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,
    0x66,0x6f,0x72,0x6d,0x20,0x66,0x72,0x61,0x67,0x20,0x5f,0x35,0x39,0x3b,0x0a,0x0a,
    0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x73,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x32,0x44,0x20,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x3b,
    0x0a,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,
    0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x69,0x6e,0x20,0x68,0x69,0x67,0x68,
    0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x6f,0x75,0x74,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,
    0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x0a,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,
    0x61,0x73,0x6b,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x32,0x20,0x5f,0x38,0x34,0x20,0x3d,0x20,0x28,0x2d,0x28,0x61,0x62,0x73,0x28,
    0x28,0x5f,0x35,0x39,0x2e,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,0x61,0x74,0x20,
    0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,
    0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x29,0x20,0x2d,0x20,0x5f,0x35,0x39,0x2e,0x73,
    0x63,0x69,0x73,0x73,0x6f,0x72,0x45,0x78,0x74,0x29,0x29,0x20,0x2a,0x20,0x5f,0x35,
    0x39,0x2e,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x53,0x63,0x61,0x6c,0x65,0x20,0x2b,
    0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x38,0x34,
    0x2e,0x78,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x29,0x20,0x2a,0x20,
    0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x38,0x34,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,
    0x2c,0x20,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,0x70,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x61,0x73,
    0x6b,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,0x28,0x31,0x2e,0x30,0x20,0x2d,
    0x20,0x61,0x62,0x73,0x28,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x20,0x2a,
    0x20,0x32,0x2e,0x30,0x20,0x2b,0x20,0x28,0x2d,0x31,0x2e,0x30,0x29,0x29,0x29,0x20,
    0x2a,0x20,0x5f,0x35,0x39,0x2e,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x75,0x6c,0x74,
    0x29,0x20,0x2a,0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x2c,0x20,0x66,0x74,0x63,
    0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x68,0x69,0x67,0x68,
    0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x64,0x72,0x6f,0x75,0x6e,0x64,0x72,
    0x65,0x63,0x74,0x28,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,
    0x74,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x65,0x78,
    0x74,0x2c,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,
    0x61,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,
    0x76,0x65,0x63,0x32,0x20,0x5f,0x33,0x33,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,0x70,
    0x74,0x29,0x20,0x2d,0x20,0x28,0x65,0x78,0x74,0x20,0x2d,0x20,0x76,0x65,0x63,0x32,
    0x28,0x72,0x61,0x64,0x2c,0x20,0x72,0x61,0x64,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x28,0x6d,0x69,0x6e,0x28,0x6d,0x61,0x78,
    0x28,0x5f,0x33,0x33,0x2e,0x78,0x2c,0x20,0x5f,0x33,0x33,0x2e,0x79,0x29,0x2c,0x20,
    0x30,0x2e,0x30,0x29,0x20,0x2b,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x6d,0x61,
    0x78,0x28,0x5f,0x33,0x33,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x30,0x2e,0x30,0x29,
    0x29,0x29,0x29,0x20,0x2d,0x20,0x72,0x61,0x64,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x30,0x20,0x3d,0x20,
    0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,0x61,0x73,0x6b,0x28,0x70,0x61,0x72,0x61,
    0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x73,0x74,0x72,0x6f,0x6b,
    0x65,0x4d,0x61,0x73,0x6b,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x31,0x32,0x32,0x20,0x3c,0x20,0x5f,0x35,0x39,0x2e,0x73,0x74,0x72,0x6f,
    0x6b,0x65,0x54,0x68,0x72,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,
    0x63,0x34,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x30,
    0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x31,0x20,0x3d,0x20,0x28,0x5f,0x35,0x39,0x2e,0x70,0x61,0x69,0x6e,0x74,0x4d,
    0x61,0x74,0x20,0x2a,0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x70,0x6f,0x73,0x2c,0x20,
    0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,
    0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x5f,0x35,0x39,0x2e,
    0x65,0x78,0x74,0x65,0x6e,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x68,0x69,0x67,0x68,0x70,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x35,0x39,0x2e,0x72,0x61,0x64,0x69,0x75,0x73,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,
    0x20,0x3d,0x20,0x6d,0x69,0x78,0x28,0x5f,0x35,0x39,0x2e,0x69,0x6e,0x6e,0x65,0x72,
    0x43,0x6f,0x6c,0x2c,0x20,0x5f,0x35,0x39,0x2e,0x6f,0x75,0x74,0x65,0x72,0x43,0x6f,
    0x6c,0x2c,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6c,0x61,0x6d,0x70,0x28,0x28,0x5f,
    0x35,0x39,0x2e,0x66,0x65,0x61,0x74,0x68,0x65,0x72,0x20,0x2a,0x20,0x30,0x2e,0x35,
    0x20,0x2b,0x20,0x73,0x64,0x72,0x6f,0x75,0x6e,0x64,0x72,0x65,0x63,0x74,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x2c,
    0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,0x20,0x2f,0x20,0x5f,0x35,0x39,
    0x2e,0x66,0x65,0x61,0x74,0x68,0x65,0x72,0x2c,0x20,0x30,0x2e,0x30,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x29,0x29,0x20,0x2a,0x20,0x28,0x5f,0x31,0x32,0x32,0x20,0x2a,0x20,
    0x5f,0x31,0x32,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x79,0x70,0x65,
    0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x5f,0x73,0x6d,0x70,0x2c,
    0x20,0x28,0x5f,0x35,0x39,0x2e,0x70,0x61,0x69,0x6e,0x74,0x4d,0x61,0x74,0x20,0x2a,
    0x20,0x76,0x65,0x63,0x34,0x28,0x66,0x70,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x2c,
    0x20,0x30,0x2e,0x30,0x29,0x29,0x2e,0x78,0x79,0x20,0x2f,0x20,0x5f,0x35,0x39,0x2e,
    0x65,0x78,0x74,0x65,0x6e,0x74,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,
    0x54,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x20,0x3d,
    0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x34,0x39,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,0x68,0x70,0x20,0x76,
    0x65,0x63,0x34,0x20,0x5f,0x32,0x35,0x35,0x20,0x3d,0x20,0x28,0x5f,0x32,0x34,0x39,
    0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x69,0x6e,0x6e,0x65,0x72,0x43,0x6f,0x6c,0x29,
    0x20,0x2a,0x20,0x28,0x5f,0x31,0x32,0x32,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x35,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,
    0x20,0x5f,0x32,0x35,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x79,0x70,0x65,
    0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x76,0x65,
    0x63,0x34,0x28,0x31,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x79,
    0x70,0x65,0x20,0x3d,0x3d,0x20,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,
    0x69,0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,
    0x31,0x20,0x3d,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x74,0x65,0x78,0x5f,
    0x73,0x6d,0x70,0x2c,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,0x54,0x79,
    0x70,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x77,0x2c,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x2e,0x74,0x65,0x78,
    0x54,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,
    0x20,0x3d,0x20,0x76,0x65,0x63,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,
    0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,
    0x67,0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x31,0x20,0x3d,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x68,0x69,0x67,
    0x68,0x70,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x33,0x30,0x32,0x20,0x3d,0x20,0x5f,
    0x33,0x30,0x31,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x33,0x30,0x32,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x5f,0x33,0x30,
    0x32,0x20,0x2a,0x20,0x5f,0x35,0x39,0x2e,0x69,0x6e,0x6e,0x65,0x72,0x43,0x6f,0x6c,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,
    0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
}
/*
    cbuffer view : register(b0)
    {
        float2 _33_viewSize : packoffset(c0);
    };


    static float4 gl_Position;
    static float2 ftcoord;
    static float2 tcoord;
    static float2 fpos;
    static float2 vertex;

    struct SPIRV_Cross_Input
    {
        float2 vertex : TEXCOORD0;
        float2 tcoord : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float2 ftcoord : TEXCOORD0;
        float2 fpos : TEXCOORD1;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        ftcoord = tcoord;
        fpos = vertex;
        gl_Position = float4(((2.0f * vertex.x) / _33_viewSize.x) - 1.0f, 1.0f - ((2.0f * vertex.y) / _33_viewSize.y), 0.0f, 1.0f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        tcoord = stage_input.tcoord;
        vertex = stage_input.vertex;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.ftcoord = ftcoord;
        stage_output.fpos = fpos;
        return stage_output;
    }
*/
@(private)
vs_source_hlsl5 := [922]u8 {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x69,0x65,0x77,0x20,0x3a,0x20,0x72,
    0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x33,0x33,0x5f,0x76,0x69,0x65,
    0x77,0x53,0x69,0x7a,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,
    0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,
    0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x63,0x6f,
    0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x74,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,
    0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,
    0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3a,0x20,0x54,0x45,
    0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x20,0x66,0x70,0x6f,0x73,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,
    0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3a,0x20,0x53,
    0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,
    0x20,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x70,0x6f,
    0x73,0x20,0x3d,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x28,0x28,0x32,0x2e,0x30,0x66,0x20,0x2a,0x20,0x76,0x65,
    0x72,0x74,0x65,0x78,0x2e,0x78,0x29,0x20,0x2f,0x20,0x5f,0x33,0x33,0x5f,0x76,0x69,
    0x65,0x77,0x53,0x69,0x7a,0x65,0x2e,0x78,0x29,0x20,0x2d,0x20,0x31,0x2e,0x30,0x66,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x28,0x28,0x32,0x2e,0x30,0x66,0x20,
    0x2a,0x20,0x76,0x65,0x72,0x74,0x65,0x78,0x2e,0x79,0x29,0x20,0x2f,0x20,0x5f,0x33,
    0x33,0x5f,0x76,0x69,0x65,0x77,0x53,0x69,0x7a,0x65,0x2e,0x79,0x29,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x74,0x63,0x6f,0x6f,
    0x72,0x64,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,
    0x2e,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x72,
    0x74,0x65,0x78,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,
    0x74,0x2e,0x76,0x65,0x72,0x74,0x65,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,0x66,0x74,0x63,
    0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x66,0x70,0x6f,0x73,0x20,0x3d,0x20,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,
    0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,0x0a,0x00,
}
/*
    cbuffer frag : register(b0)
    {
        row_major float4x4 _59_scissorMat : packoffset(c0);
        row_major float4x4 _59_paintMat : packoffset(c4);
        float4 _59_innerCol : packoffset(c8);
        float4 _59_outerCol : packoffset(c9);
        float2 _59_scissorExt : packoffset(c10);
        float2 _59_scissorScale : packoffset(c10.z);
        float2 _59_extent : packoffset(c11);
        float _59_radius : packoffset(c11.z);
        float _59_feather : packoffset(c11.w);
        float _59_strokeMult : packoffset(c12);
        float _59_strokeThr : packoffset(c12.y);
        int _59_texType : packoffset(c12.z);
        int _59_type : packoffset(c12.w);
    };

    Texture2D<float4> tex : register(t0);
    SamplerState smp : register(s0);

    static float2 ftcoord;
    static float2 fpos;
    static float4 outColor;

    struct SPIRV_Cross_Input
    {
        float2 ftcoord : TEXCOORD0;
        float2 fpos : TEXCOORD1;
    };

    struct SPIRV_Cross_Output
    {
        float4 outColor : SV_Target0;
    };

    float scissorMask(float2 p)
    {
        float2 _84 = mad(-(abs(mul(float4(p, 1.0f, 0.0f), _59_scissorMat).xy) - _59_scissorExt), _59_scissorScale, 0.5f.xx);
        return clamp(_84.x, 0.0f, 1.0f) * clamp(_84.y, 0.0f, 1.0f);
    }

    float strokeMask()
    {
        return min(1.0f, (1.0f - abs(mad(ftcoord.x, 2.0f, -1.0f))) * _59_strokeMult) * min(1.0f, ftcoord.y);
    }

    float sdroundrect(float2 pt, float2 ext, float rad)
    {
        float2 _33 = abs(pt) - (ext - float2(rad, rad));
        return (min(max(_33.x, _33.y), 0.0f) + length(max(_33, 0.0f.xx))) - rad;
    }

    void frag_main()
    {
        float2 param = fpos;
        float _120 = scissorMask(param);
        float _122 = strokeMask();
        if (_122 < _59_strokeThr)
        {
            discard;
        }
        float4 result;
        if (_59_type == 0)
        {
            float2 param_1 = mul(float4(fpos, 1.0f, 0.0f), _59_paintMat).xy;
            float2 param_2 = _59_extent;
            float param_3 = _59_radius;
            result = lerp(_59_innerCol, _59_outerCol, clamp(mad(_59_feather, 0.5f, sdroundrect(param_1, param_2, param_3)) / _59_feather, 0.0f, 1.0f).xxxx) * (_122 * _120);
        }
        else
        {
            if (_59_type == 1)
            {
                float4 color = tex.Sample(smp, mul(float4(fpos, 1.0f, 0.0f), _59_paintMat).xy / _59_extent);
                if (_59_texType == 1)
                {
                    color = float4(color.xyz * color.w, color.w);
                }
                if (_59_texType == 2)
                {
                    color = color.x.xxxx;
                }
                float4 _249 = color;
                float4 _255 = (_249 * _59_innerCol) * (_122 * _120);
                color = _255;
                result = _255;
            }
            else
            {
                if (_59_type == 2)
                {
                    result = 1.0f.xxxx;
                }
                else
                {
                    if (_59_type == 3)
                    {
                        float4 color_1 = tex.Sample(smp, ftcoord);
                        if (_59_texType == 1)
                        {
                            color_1 = float4(color_1.xyz * color_1.w, color_1.w);
                        }
                        if (_59_texType == 2)
                        {
                            color_1 = color_1.x.xxxx;
                        }
                        float4 _301 = color_1;
                        float4 _302 = _301 * _120;
                        color_1 = _302;
                        result = _302 * _59_innerCol;
                    }
                }
            }
        }
        outColor = result;
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        ftcoord = stage_input.ftcoord;
        fpos = stage_input.fpos;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.outColor = outColor;
        return stage_output;
    }
*/
@(private)
fs_source_hlsl5 := [3586]u8 {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x72,0x61,0x67,0x20,0x3a,0x20,0x72,
    0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,
    0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x78,0x34,0x20,0x5f,0x35,0x39,0x5f,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,
    0x4d,0x61,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,0x61,
    0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x35,0x39,
    0x5f,0x70,0x61,0x69,0x6e,0x74,0x4d,0x61,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x35,0x39,0x5f,0x69,0x6e,0x6e,0x65,0x72,
    0x43,0x6f,0x6c,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x38,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x5f,0x35,0x39,0x5f,0x6f,0x75,0x74,0x65,0x72,0x43,0x6f,0x6c,0x20,0x3a,0x20,
    0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x39,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x5f,0x73,
    0x63,0x69,0x73,0x73,0x6f,0x72,0x45,0x78,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x5f,0x73,0x63,0x69,0x73,
    0x73,0x6f,0x72,0x53,0x63,0x61,0x6c,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x30,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x35,0x39,0x5f,0x65,0x78,0x74,
    0x65,0x6e,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,
    0x28,0x63,0x31,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x35,0x39,0x5f,0x72,0x61,0x64,0x69,0x75,0x73,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x31,0x2e,0x7a,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x39,0x5f,0x66,
    0x65,0x61,0x74,0x68,0x65,0x72,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,
    0x73,0x65,0x74,0x28,0x63,0x31,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x35,0x39,0x5f,0x73,0x74,0x72,0x6f,0x6b,0x65,
    0x4d,0x75,0x6c,0x74,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x31,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x35,0x39,0x5f,0x73,0x74,0x72,0x6f,0x6b,0x65,0x54,0x68,0x72,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x32,
    0x2e,0x79,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x35,0x39,
    0x5f,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x32,0x2e,0x7a,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x69,0x6e,0x74,0x20,0x5f,0x35,0x39,0x5f,0x74,0x79,0x70,0x65,0x20,0x3a,
    0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x32,0x2e,
    0x77,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,
    0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,0x3e,0x20,0x74,0x65,0x78,0x20,0x3a,0x20,
    0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x73,0x6d,0x70,0x20,0x3a,
    0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,0x0a,0x0a,
    0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x74,
    0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x32,0x20,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,
    0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,
    0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,
    0x64,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x66,0x70,0x6f,0x73,0x20,0x3a,
    0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,0x3b,0x0a,0x7d,0x3b,
    0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,
    0x61,0x73,0x6b,0x28,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x29,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x38,0x34,0x20,0x3d,
    0x20,0x6d,0x61,0x64,0x28,0x2d,0x28,0x61,0x62,0x73,0x28,0x6d,0x75,0x6c,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x70,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,
    0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x35,0x39,0x5f,0x73,0x63,0x69,0x73,0x73,0x6f,
    0x72,0x4d,0x61,0x74,0x29,0x2e,0x78,0x79,0x29,0x20,0x2d,0x20,0x5f,0x35,0x39,0x5f,
    0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x45,0x78,0x74,0x29,0x2c,0x20,0x5f,0x35,0x39,
    0x5f,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x53,0x63,0x61,0x6c,0x65,0x2c,0x20,0x30,
    0x2e,0x35,0x66,0x2e,0x78,0x78,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x5f,0x38,0x34,0x2e,0x78,0x2c,
    0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x20,0x2a,0x20,0x63,
    0x6c,0x61,0x6d,0x70,0x28,0x5f,0x38,0x34,0x2e,0x79,0x2c,0x20,0x30,0x2e,0x30,0x66,
    0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x61,0x73,0x6b,0x28,0x29,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6d,0x69,0x6e,0x28,
    0x31,0x2e,0x30,0x66,0x2c,0x20,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x61,0x62,
    0x73,0x28,0x6d,0x61,0x64,0x28,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x2c,
    0x20,0x32,0x2e,0x30,0x66,0x2c,0x20,0x2d,0x31,0x2e,0x30,0x66,0x29,0x29,0x29,0x20,
    0x2a,0x20,0x5f,0x35,0x39,0x5f,0x73,0x74,0x72,0x6f,0x6b,0x65,0x4d,0x75,0x6c,0x74,
    0x29,0x20,0x2a,0x20,0x6d,0x69,0x6e,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x66,0x74,
    0x63,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x73,0x64,0x72,0x6f,0x75,0x6e,0x64,0x72,0x65,0x63,0x74,0x28,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x74,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x65,0x78,0x74,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x72,0x61,0x64,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x5f,0x33,
    0x33,0x20,0x3d,0x20,0x61,0x62,0x73,0x28,0x70,0x74,0x29,0x20,0x2d,0x20,0x28,0x65,
    0x78,0x74,0x20,0x2d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x72,0x61,0x64,0x2c,
    0x20,0x72,0x61,0x64,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x28,0x6d,0x69,0x6e,0x28,0x6d,0x61,0x78,0x28,0x5f,0x33,0x33,0x2e,
    0x78,0x2c,0x20,0x5f,0x33,0x33,0x2e,0x79,0x29,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,
    0x20,0x2b,0x20,0x6c,0x65,0x6e,0x67,0x74,0x68,0x28,0x6d,0x61,0x78,0x28,0x5f,0x33,
    0x33,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2e,0x78,0x78,0x29,0x29,0x29,0x20,0x2d,0x20,
    0x72,0x61,0x64,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,
    0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x66,0x70,
    0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,
    0x32,0x30,0x20,0x3d,0x20,0x73,0x63,0x69,0x73,0x73,0x6f,0x72,0x4d,0x61,0x73,0x6b,
    0x28,0x70,0x61,0x72,0x61,0x6d,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x5f,0x31,0x32,0x32,0x20,0x3d,0x20,0x73,0x74,0x72,0x6f,0x6b,0x65,
    0x4d,0x61,0x73,0x6b,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,
    0x5f,0x31,0x32,0x32,0x20,0x3c,0x20,0x5f,0x35,0x39,0x5f,0x73,0x74,0x72,0x6f,0x6b,
    0x65,0x54,0x68,0x72,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x64,0x69,0x73,0x63,0x61,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x72,0x65,
    0x73,0x75,0x6c,0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,
    0x39,0x5f,0x74,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x30,0x29,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x6d,0x75,0x6c,0x28,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x70,0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,
    0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,0x20,0x5f,0x35,0x39,0x5f,0x70,0x61,
    0x69,0x6e,0x74,0x4d,0x61,0x74,0x29,0x2e,0x78,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x20,0x3d,0x20,0x5f,0x35,0x39,0x5f,0x65,0x78,0x74,0x65,0x6e,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x33,0x20,0x3d,0x20,0x5f,0x35,0x39,0x5f,0x72,0x61,0x64,
    0x69,0x75,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,
    0x75,0x6c,0x74,0x20,0x3d,0x20,0x6c,0x65,0x72,0x70,0x28,0x5f,0x35,0x39,0x5f,0x69,
    0x6e,0x6e,0x65,0x72,0x43,0x6f,0x6c,0x2c,0x20,0x5f,0x35,0x39,0x5f,0x6f,0x75,0x74,
    0x65,0x72,0x43,0x6f,0x6c,0x2c,0x20,0x63,0x6c,0x61,0x6d,0x70,0x28,0x6d,0x61,0x64,
    0x28,0x5f,0x35,0x39,0x5f,0x66,0x65,0x61,0x74,0x68,0x65,0x72,0x2c,0x20,0x30,0x2e,
    0x35,0x66,0x2c,0x20,0x73,0x64,0x72,0x6f,0x75,0x6e,0x64,0x72,0x65,0x63,0x74,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x33,0x29,0x29,0x20,0x2f,0x20,0x5f,0x35,
    0x39,0x5f,0x66,0x65,0x61,0x74,0x68,0x65,0x72,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,
    0x20,0x31,0x2e,0x30,0x66,0x29,0x2e,0x78,0x78,0x78,0x78,0x29,0x20,0x2a,0x20,0x28,
    0x5f,0x31,0x32,0x32,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,
    0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,
    0x35,0x39,0x5f,0x74,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x20,0x3d,0x20,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x6d,
    0x70,0x2c,0x20,0x6d,0x75,0x6c,0x28,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x66,0x70,
    0x6f,0x73,0x2c,0x20,0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x30,0x66,0x29,0x2c,
    0x20,0x5f,0x35,0x39,0x5f,0x70,0x61,0x69,0x6e,0x74,0x4d,0x61,0x74,0x29,0x2e,0x78,
    0x79,0x20,0x2f,0x20,0x5f,0x35,0x39,0x5f,0x65,0x78,0x74,0x65,0x6e,0x74,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,
    0x28,0x5f,0x35,0x39,0x5f,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,
    0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x63,0x6f,0x6c,0x6f,
    0x72,0x2e,0x77,0x2c,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,
    0x5f,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x2e,0x78,0x2e,0x78,0x78,0x78,
    0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x5f,0x32,0x34,0x39,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x35,0x35,0x20,0x3d,0x20,0x28,0x5f,0x32,0x34,
    0x39,0x20,0x2a,0x20,0x5f,0x35,0x39,0x5f,0x69,0x6e,0x6e,0x65,0x72,0x43,0x6f,0x6c,
    0x29,0x20,0x2a,0x20,0x28,0x5f,0x31,0x32,0x32,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x5f,0x32,0x35,0x35,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,
    0x3d,0x20,0x5f,0x32,0x35,0x35,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x5f,0x74,0x79,0x70,
    0x65,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,0x3d,0x20,0x31,
    0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x65,0x6c,0x73,0x65,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x5f,0x74,
    0x79,0x70,0x65,0x20,0x3d,0x3d,0x20,0x33,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,
    0x20,0x74,0x65,0x78,0x2e,0x53,0x61,0x6d,0x70,0x6c,0x65,0x28,0x73,0x6d,0x70,0x2c,
    0x20,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x69,
    0x66,0x20,0x28,0x5f,0x35,0x39,0x5f,0x74,0x65,0x78,0x54,0x79,0x70,0x65,0x20,0x3d,
    0x3d,0x20,0x31,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x79,0x7a,0x20,
    0x2a,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x77,0x2c,0x20,0x63,0x6f,0x6c,
    0x6f,0x72,0x5f,0x31,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x69,0x66,0x20,0x28,0x5f,0x35,0x39,0x5f,0x74,0x65,0x78,0x54,0x79,
    0x70,0x65,0x20,0x3d,0x3d,0x20,0x32,0x29,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,
    0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x2e,0x78,0x2e,0x78,0x78,0x78,0x78,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x20,0x5f,0x33,0x30,0x31,0x20,0x3d,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x33,0x30,
    0x32,0x20,0x3d,0x20,0x5f,0x33,0x30,0x31,0x20,0x2a,0x20,0x5f,0x31,0x32,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x5f,0x31,0x20,0x3d,0x20,0x5f,
    0x33,0x30,0x32,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x20,
    0x3d,0x20,0x5f,0x33,0x30,0x32,0x20,0x2a,0x20,0x5f,0x35,0x39,0x5f,0x69,0x6e,0x6e,
    0x65,0x72,0x43,0x6f,0x6c,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x43,0x6f,
    0x6c,0x6f,0x72,0x20,0x3d,0x20,0x72,0x65,0x73,0x75,0x6c,0x74,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,
    0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,
    0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,
    0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x74,
    0x63,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x70,0x75,0x74,0x2e,0x66,0x74,0x63,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x70,0x6f,0x73,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,
    0x70,0x75,0x74,0x2e,0x66,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x72,
    0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x2e,0x6f,0x75,0x74,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x6f,0x75,0x74,0x43,
    0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,
    0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,0x0a,0x7d,
    0x0a,0x00,
}
ui_shader_desc :: proc (backend: sg.Backend) -> sg.Shader_Desc {
    desc: sg.Shader_Desc
    desc.label = "ui_shader"
    #partial switch backend {
    case .GLCORE:
        desc.attrs[0].name = "vertex"
        desc.attrs[1].name = "tcoord"
        desc.vs.source = transmute(cstring)&vs_source_glsl430
        desc.vs.entry = "main"
        desc.vs.uniform_blocks[0].size = 16
        desc.vs.uniform_blocks[0].layout = .STD140
        desc.vs.uniform_blocks[0].uniforms[0].name = "view"
        desc.vs.uniform_blocks[0].uniforms[0].type = .FLOAT4
        desc.vs.uniform_blocks[0].uniforms[0].array_count = 1
        desc.fs.source = transmute(cstring)&fs_source_glsl430
        desc.fs.entry = "main"
        desc.fs.uniform_blocks[0].size = 208
        desc.fs.uniform_blocks[0].layout = .STD140
        desc.fs.uniform_blocks[0].uniforms[0].name = "_59.scissorMat"
        desc.fs.uniform_blocks[0].uniforms[0].type = .MAT4
        desc.fs.uniform_blocks[0].uniforms[1].name = "_59.paintMat"
        desc.fs.uniform_blocks[0].uniforms[1].type = .MAT4
        desc.fs.uniform_blocks[0].uniforms[2].name = "_59.innerCol"
        desc.fs.uniform_blocks[0].uniforms[2].type = .FLOAT4
        desc.fs.uniform_blocks[0].uniforms[3].name = "_59.outerCol"
        desc.fs.uniform_blocks[0].uniforms[3].type = .FLOAT4
        desc.fs.uniform_blocks[0].uniforms[4].name = "_59.scissorExt"
        desc.fs.uniform_blocks[0].uniforms[4].type = .FLOAT2
        desc.fs.uniform_blocks[0].uniforms[5].name = "_59.scissorScale"
        desc.fs.uniform_blocks[0].uniforms[5].type = .FLOAT2
        desc.fs.uniform_blocks[0].uniforms[6].name = "_59.extent"
        desc.fs.uniform_blocks[0].uniforms[6].type = .FLOAT2
        desc.fs.uniform_blocks[0].uniforms[7].name = "_59.radius"
        desc.fs.uniform_blocks[0].uniforms[7].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[8].name = "_59.feather"
        desc.fs.uniform_blocks[0].uniforms[8].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[9].name = "_59.strokeMult"
        desc.fs.uniform_blocks[0].uniforms[9].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[10].name = "_59.strokeThr"
        desc.fs.uniform_blocks[0].uniforms[10].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[11].name = "_59.texType"
        desc.fs.uniform_blocks[0].uniforms[11].type = .INT
        desc.fs.uniform_blocks[0].uniforms[12].name = "_59.type"
        desc.fs.uniform_blocks[0].uniforms[12].type = .INT
        desc.fs.images[0].used = true
        desc.fs.images[0].multisampled = false
        desc.fs.images[0].image_type = ._2D
        desc.fs.images[0].sample_type = .FLOAT
        desc.fs.samplers[0].used = true
        desc.fs.samplers[0].sampler_type = .FILTERING
        desc.fs.image_sampler_pairs[0].used = true
        desc.fs.image_sampler_pairs[0].image_slot = 0
        desc.fs.image_sampler_pairs[0].sampler_slot = 0
        desc.fs.image_sampler_pairs[0].glsl_name = "tex_smp"
    case .GLES3:
        desc.attrs[0].name = "vertex"
        desc.attrs[1].name = "tcoord"
        desc.vs.source = transmute(cstring)&vs_source_glsl300es
        desc.vs.entry = "main"
        desc.vs.uniform_blocks[0].size = 16
        desc.vs.uniform_blocks[0].layout = .STD140
        desc.vs.uniform_blocks[0].uniforms[0].name = "view"
        desc.vs.uniform_blocks[0].uniforms[0].type = .FLOAT4
        desc.vs.uniform_blocks[0].uniforms[0].array_count = 1
        desc.fs.source = transmute(cstring)&fs_source_glsl300es
        desc.fs.entry = "main"
        desc.fs.uniform_blocks[0].size = 208
        desc.fs.uniform_blocks[0].layout = .STD140
        desc.fs.uniform_blocks[0].uniforms[0].name = "_59.scissorMat"
        desc.fs.uniform_blocks[0].uniforms[0].type = .MAT4
        desc.fs.uniform_blocks[0].uniforms[1].name = "_59.paintMat"
        desc.fs.uniform_blocks[0].uniforms[1].type = .MAT4
        desc.fs.uniform_blocks[0].uniforms[2].name = "_59.innerCol"
        desc.fs.uniform_blocks[0].uniforms[2].type = .FLOAT4
        desc.fs.uniform_blocks[0].uniforms[3].name = "_59.outerCol"
        desc.fs.uniform_blocks[0].uniforms[3].type = .FLOAT4
        desc.fs.uniform_blocks[0].uniforms[4].name = "_59.scissorExt"
        desc.fs.uniform_blocks[0].uniforms[4].type = .FLOAT2
        desc.fs.uniform_blocks[0].uniforms[5].name = "_59.scissorScale"
        desc.fs.uniform_blocks[0].uniforms[5].type = .FLOAT2
        desc.fs.uniform_blocks[0].uniforms[6].name = "_59.extent"
        desc.fs.uniform_blocks[0].uniforms[6].type = .FLOAT2
        desc.fs.uniform_blocks[0].uniforms[7].name = "_59.radius"
        desc.fs.uniform_blocks[0].uniforms[7].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[8].name = "_59.feather"
        desc.fs.uniform_blocks[0].uniforms[8].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[9].name = "_59.strokeMult"
        desc.fs.uniform_blocks[0].uniforms[9].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[10].name = "_59.strokeThr"
        desc.fs.uniform_blocks[0].uniforms[10].type = .FLOAT
        desc.fs.uniform_blocks[0].uniforms[11].name = "_59.texType"
        desc.fs.uniform_blocks[0].uniforms[11].type = .INT
        desc.fs.uniform_blocks[0].uniforms[12].name = "_59.type"
        desc.fs.uniform_blocks[0].uniforms[12].type = .INT
        desc.fs.images[0].used = true
        desc.fs.images[0].multisampled = false
        desc.fs.images[0].image_type = ._2D
        desc.fs.images[0].sample_type = .FLOAT
        desc.fs.samplers[0].used = true
        desc.fs.samplers[0].sampler_type = .FILTERING
        desc.fs.image_sampler_pairs[0].used = true
        desc.fs.image_sampler_pairs[0].image_slot = 0
        desc.fs.image_sampler_pairs[0].sampler_slot = 0
        desc.fs.image_sampler_pairs[0].glsl_name = "tex_smp"
    case .D3D11:
        desc.attrs[0].sem_name = "TEXCOORD"
        desc.attrs[0].sem_index = 0
        desc.attrs[1].sem_name = "TEXCOORD"
        desc.attrs[1].sem_index = 1
        desc.vs.source = transmute(cstring)&vs_source_hlsl5
        desc.vs.d3d11_target = "vs_5_0"
        desc.vs.entry = "main"
        desc.vs.uniform_blocks[0].size = 16
        desc.vs.uniform_blocks[0].layout = .STD140
        desc.fs.source = transmute(cstring)&fs_source_hlsl5
        desc.fs.d3d11_target = "ps_5_0"
        desc.fs.entry = "main"
        desc.fs.uniform_blocks[0].size = 208
        desc.fs.uniform_blocks[0].layout = .STD140
        desc.fs.images[0].used = true
        desc.fs.images[0].multisampled = false
        desc.fs.images[0].image_type = ._2D
        desc.fs.images[0].sample_type = .FLOAT
        desc.fs.samplers[0].used = true
        desc.fs.samplers[0].sampler_type = .FILTERING
        desc.fs.image_sampler_pairs[0].used = true
        desc.fs.image_sampler_pairs[0].image_slot = 0
        desc.fs.image_sampler_pairs[0].sampler_slot = 0
    }
    return desc
}
